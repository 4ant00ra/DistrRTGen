/* soapServer.cpp
   Generated by gSOAP 2.7.11 from temp.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.7.11 2008-08-31 14:10:32 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif

	do
	{
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			soap->error = SOAP_EOF;
			return soap_send_fault(soap);
		}
#endif

		soap_begin(soap);

#ifndef WITH_FASTCGI
		if (soap->max_keep_alive > 0 && !--k)
			soap->keep_alive = 0;
#endif

		if (soap_begin_recv(soap))
		{	if (soap->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(soap);
#else 
				return soap_send_fault(soap);
#endif
			}
			soap_closesock(soap);

			continue;
		}

		if (soap_envelope_begin_in(soap)
		 || soap_recv_header(soap)
		 || soap_body_begin_in(soap)
		 || soap_serve_request(soap)
		 || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:RegisterNewClient"))
		return soap_serve_ns1__RegisterNewClient(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:RequestWork"))
		return soap_serve_ns1__RequestWork(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:UploadCompletedWork"))
		return soap_serve_ns1__UploadCompletedWork(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:RequestHashToIndex"))
		return soap_serve_ns1__RequestHashToIndex(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:UploadHashIndexList"))
		return soap_serve_ns1__UploadHashIndexList(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:RequestChainCheck"))
		return soap_serve_ns1__RequestChainCheck(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:SendChainCheckResult"))
		return soap_serve_ns1__SendChainCheckResult(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:ReportError"))
		return soap_serve_ns1__ReportError(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:RequestDetailedCrackingInfo"))
		return soap_serve_ns1__RequestDetailedCrackingInfo(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__RegisterNewClient(struct soap *soap)
{	struct ns1__RegisterNewClient soap_tmp_ns1__RegisterNewClient;
	struct ns1__RegisterNewClientResponse _param_1;
	soap_default_ns1__RegisterNewClientResponse(soap, &_param_1);
	soap_default_ns1__RegisterNewClient(soap, &soap_tmp_ns1__RegisterNewClient);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__RegisterNewClient(soap, &soap_tmp_ns1__RegisterNewClient, "ns1:RegisterNewClient", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__RegisterNewClient(soap, soap_tmp_ns1__RegisterNewClient.MachineInfo, _param_1);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__RegisterNewClientResponse(soap, &_param_1);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__RegisterNewClientResponse(soap, &_param_1, "ns1:RegisterNewClientResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__RegisterNewClientResponse(soap, &_param_1, "ns1:RegisterNewClientResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__RequestWork(struct soap *soap)
{	struct ns1__RequestWork soap_tmp_ns1__RequestWork;
	struct ns1__RequestWorkResponse _param_2;
	soap_default_ns1__RequestWorkResponse(soap, &_param_2);
	soap_default_ns1__RequestWork(soap, &soap_tmp_ns1__RequestWork);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__RequestWork(soap, &soap_tmp_ns1__RequestWork, "ns1:RequestWork", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__RequestWork(soap, soap_tmp_ns1__RequestWork.MachineInfo, soap_tmp_ns1__RequestWork.NumPieces, _param_2);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__RequestWorkResponse(soap, &_param_2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__RequestWorkResponse(soap, &_param_2, "ns1:RequestWorkResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__RequestWorkResponse(soap, &_param_2, "ns1:RequestWorkResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__UploadCompletedWork(struct soap *soap)
{	struct ns1__UploadCompletedWork soap_tmp_ns1__UploadCompletedWork;
	struct ns1__UploadCompletedWorkResponse _param_3;
	soap_default_ns1__UploadCompletedWorkResponse(soap, &_param_3);
	soap_default_ns1__UploadCompletedWork(soap, &soap_tmp_ns1__UploadCompletedWork);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__UploadCompletedWork(soap, &soap_tmp_ns1__UploadCompletedWork, "ns1:UploadCompletedWork", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__UploadCompletedWork(soap, soap_tmp_ns1__UploadCompletedWork.PartID, soap_tmp_ns1__UploadCompletedWork.Data, _param_3);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__UploadCompletedWorkResponse(soap, &_param_3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__UploadCompletedWorkResponse(soap, &_param_3, "ns1:UploadCompletedWorkResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__UploadCompletedWorkResponse(soap, &_param_3, "ns1:UploadCompletedWorkResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__RequestHashToIndex(struct soap *soap)
{	struct ns1__RequestHashToIndex soap_tmp_ns1__RequestHashToIndex;
	struct ns1__RequestHashToIndexResponse _param_4;
	soap_default_ns1__RequestHashToIndexResponse(soap, &_param_4);
	soap_default_ns1__RequestHashToIndex(soap, &soap_tmp_ns1__RequestHashToIndex);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__RequestHashToIndex(soap, &soap_tmp_ns1__RequestHashToIndex, "ns1:RequestHashToIndex", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__RequestHashToIndex(soap, soap_tmp_ns1__RequestHashToIndex.MachineInfo, soap_tmp_ns1__RequestHashToIndex.NumHashes, soap_tmp_ns1__RequestHashToIndex.RecievePublicHashes, _param_4);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__RequestHashToIndexResponse(soap, &_param_4);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__RequestHashToIndexResponse(soap, &_param_4, "ns1:RequestHashToIndexResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__RequestHashToIndexResponse(soap, &_param_4, "ns1:RequestHashToIndexResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__UploadHashIndexList(struct soap *soap)
{	struct ns1__UploadHashIndexList soap_tmp_ns1__UploadHashIndexList;
	struct ns1__UploadHashIndexListResponse _param_5;
	soap_default_ns1__UploadHashIndexListResponse(soap, &_param_5);
	soap_default_ns1__UploadHashIndexList(soap, &soap_tmp_ns1__UploadHashIndexList);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__UploadHashIndexList(soap, &soap_tmp_ns1__UploadHashIndexList, "ns1:UploadHashIndexList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__UploadHashIndexList(soap, soap_tmp_ns1__UploadHashIndexList.MachineInfo, soap_tmp_ns1__UploadHashIndexList.RequestID, soap_tmp_ns1__UploadHashIndexList.IndiceList, _param_5);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__UploadHashIndexListResponse(soap, &_param_5);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__UploadHashIndexListResponse(soap, &_param_5, "ns1:UploadHashIndexListResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__UploadHashIndexListResponse(soap, &_param_5, "ns1:UploadHashIndexListResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__RequestChainCheck(struct soap *soap)
{	struct ns1__RequestChainCheck soap_tmp_ns1__RequestChainCheck;
	struct ns1__RequestChainCheckResponse _param_6;
	soap_default_ns1__RequestChainCheckResponse(soap, &_param_6);
	soap_default_ns1__RequestChainCheck(soap, &soap_tmp_ns1__RequestChainCheck);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__RequestChainCheck(soap, &soap_tmp_ns1__RequestChainCheck, "ns1:RequestChainCheck", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__RequestChainCheck(soap, soap_tmp_ns1__RequestChainCheck.MachineInfo, soap_tmp_ns1__RequestChainCheck.NumHashes, soap_tmp_ns1__RequestChainCheck.RecievePublicHashes, _param_6);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__RequestChainCheckResponse(soap, &_param_6);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__RequestChainCheckResponse(soap, &_param_6, "ns1:RequestChainCheckResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__RequestChainCheckResponse(soap, &_param_6, "ns1:RequestChainCheckResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__SendChainCheckResult(struct soap *soap)
{	struct ns1__SendChainCheckResult soap_tmp_ns1__SendChainCheckResult;
	struct ns1__SendChainCheckResultResponse _param_7;
	soap_default_ns1__SendChainCheckResultResponse(soap, &_param_7);
	soap_default_ns1__SendChainCheckResult(soap, &soap_tmp_ns1__SendChainCheckResult);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__SendChainCheckResult(soap, &soap_tmp_ns1__SendChainCheckResult, "ns1:SendChainCheckResult", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__SendChainCheckResult(soap, soap_tmp_ns1__SendChainCheckResult.MachineInfo, soap_tmp_ns1__SendChainCheckResult.RequestID, soap_tmp_ns1__SendChainCheckResult.Password, _param_7);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__SendChainCheckResultResponse(soap, &_param_7);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__SendChainCheckResultResponse(soap, &_param_7, "ns1:SendChainCheckResultResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__SendChainCheckResultResponse(soap, &_param_7, "ns1:SendChainCheckResultResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__ReportError(struct soap *soap)
{	struct ns1__ReportError soap_tmp_ns1__ReportError;
	struct ns1__ReportErrorResponse _param_8;
	soap_default_ns1__ReportErrorResponse(soap, &_param_8);
	soap_default_ns1__ReportError(soap, &soap_tmp_ns1__ReportError);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__ReportError(soap, &soap_tmp_ns1__ReportError, "ns1:ReportError", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__ReportError(soap, soap_tmp_ns1__ReportError.MachineInfo, soap_tmp_ns1__ReportError.ErrorString, _param_8);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__ReportErrorResponse(soap, &_param_8);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__ReportErrorResponse(soap, &_param_8, "ns1:ReportErrorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__ReportErrorResponse(soap, &_param_8, "ns1:ReportErrorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__RequestDetailedCrackingInfo(struct soap *soap)
{	struct ns1__RequestDetailedCrackingInfo soap_tmp_ns1__RequestDetailedCrackingInfo;
	struct ns1__RequestDetailedCrackingInfoResponse _param_9;
	soap_default_ns1__RequestDetailedCrackingInfoResponse(soap, &_param_9);
	soap_default_ns1__RequestDetailedCrackingInfo(soap, &soap_tmp_ns1__RequestDetailedCrackingInfo);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__RequestDetailedCrackingInfo(soap, &soap_tmp_ns1__RequestDetailedCrackingInfo, "ns1:RequestDetailedCrackingInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__RequestDetailedCrackingInfo(soap, soap_tmp_ns1__RequestDetailedCrackingInfo.RequestID, _param_9);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__RequestDetailedCrackingInfoResponse(soap, &_param_9);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__RequestDetailedCrackingInfoResponse(soap, &_param_9, "ns1:RequestDetailedCrackingInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__RequestDetailedCrackingInfoResponse(soap, &_param_9, "ns1:RequestDetailedCrackingInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

/* End of soapServer.cpp */
