/* soapDistrRTGenBindingProxy.h
   Generated by gSOAP 2.7.11 from temp.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapDistrRTGenBindingProxy_H
#define soapDistrRTGenBindingProxy_H
#include "soapH.h"
class DistrRTGenBinding
{   public:
	/// Runtime engine context allocated in constructor
	struct soap *soap;
	/// Endpoint URL of service 'DistrRTGenBinding' (change as needed)
	const char *endpoint;
	/// Constructor allocates soap engine context, sets default endpoint URL, and sets namespace mapping table
	DistrRTGenBinding()
	{ soap = soap_new(); endpoint = "http://distributed.freerainbowtables.com/server.php"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "urn:DistrRTGen", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	/// Destructor frees deserialized data and soap engine context
	virtual ~DistrRTGenBinding() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	/// Invoke 'RegisterNewClient' of service 'DistrRTGenBinding' and return error code (or SOAP_OK)
	virtual int ns1__RegisterNewClient(ns1__MachineInfo *MachineInfo, struct ns1__RegisterNewClientResponse &_param_1) { return soap ? soap_call_ns1__RegisterNewClient(soap, endpoint, NULL, MachineInfo, _param_1) : SOAP_EOM; };
	/// Invoke 'RequestWork' of service 'DistrRTGenBinding' and return error code (or SOAP_OK)
	virtual int ns1__RequestWork(ns1__MachineInfo *MachineInfo, int NumPieces, struct ns1__RequestWorkResponse &_param_2) { return soap ? soap_call_ns1__RequestWork(soap, endpoint, NULL, MachineInfo, NumPieces, _param_2) : SOAP_EOM; };
	/// Invoke 'UploadCompletedWork' of service 'DistrRTGenBinding' and return error code (or SOAP_OK)
	virtual int ns1__UploadCompletedWork(int PartID, xsd__base64Binary Data, struct ns1__UploadCompletedWorkResponse &_param_3) { return soap ? soap_call_ns1__UploadCompletedWork(soap, endpoint, NULL, PartID, Data, _param_3) : SOAP_EOM; };
	/// Invoke 'RequestHashToIndex' of service 'DistrRTGenBinding' and return error code (or SOAP_OK)
	virtual int ns1__RequestHashToIndex(ns1__MachineInfo *MachineInfo, unsigned int NumHashes, unsigned int RecievePublicHashes, struct ns1__RequestHashToIndexResponse &_param_4) { return soap ? soap_call_ns1__RequestHashToIndex(soap, endpoint, NULL, MachineInfo, NumHashes, RecievePublicHashes, _param_4) : SOAP_EOM; };
	/// Invoke 'UploadHashIndexList' of service 'DistrRTGenBinding' and return error code (or SOAP_OK)
	virtual int ns1__UploadHashIndexList(ns1__MachineInfo *MachineInfo, unsigned int RequestID, std::string IndiceList, struct ns1__UploadHashIndexListResponse &_param_5) { return soap ? soap_call_ns1__UploadHashIndexList(soap, endpoint, NULL, MachineInfo, RequestID, IndiceList, _param_5) : SOAP_EOM; };
	/// Invoke 'RequestChainCheck' of service 'DistrRTGenBinding' and return error code (or SOAP_OK)
	virtual int ns1__RequestChainCheck(ns1__MachineInfo *MachineInfo, unsigned int NumHashes, unsigned int RecievePublicHashes, struct ns1__RequestChainCheckResponse &_param_6) { return soap ? soap_call_ns1__RequestChainCheck(soap, endpoint, NULL, MachineInfo, NumHashes, RecievePublicHashes, _param_6) : SOAP_EOM; };
	/// Invoke 'SendChainCheckResult' of service 'DistrRTGenBinding' and return error code (or SOAP_OK)
	virtual int ns1__SendChainCheckResult(ns1__MachineInfo *MachineInfo, unsigned int RequestID, std::string Password, struct ns1__SendChainCheckResultResponse &_param_7) { return soap ? soap_call_ns1__SendChainCheckResult(soap, endpoint, NULL, MachineInfo, RequestID, Password, _param_7) : SOAP_EOM; };
	/// Invoke 'ReportError' of service 'DistrRTGenBinding' and return error code (or SOAP_OK)
	virtual int ns1__ReportError(ns1__MachineInfo *MachineInfo, std::string ErrorString, struct ns1__ReportErrorResponse &_param_8) { return soap ? soap_call_ns1__ReportError(soap, endpoint, NULL, MachineInfo, ErrorString, _param_8) : SOAP_EOM; };
	/// Invoke 'RequestDetailedCrackingInfo' of service 'DistrRTGenBinding' and return error code (or SOAP_OK)
	virtual int ns1__RequestDetailedCrackingInfo(int RequestID, struct ns1__RequestDetailedCrackingInfoResponse &_param_9) { return soap ? soap_call_ns1__RequestDetailedCrackingInfo(soap, endpoint, NULL, RequestID, _param_9) : SOAP_EOM; };
};
#endif
